---
name: Deploy on production server
on:
  push:
    branches: [main]
jobs:
  test:
    name: Test Stage
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.13"
      - name: Install dependencies
        run: |
          pip install flake8
      - name: Run flake8
        run: flake8 .
  build:
    name: Build Stage
    runs-on: ubuntu-latest
    needs: test
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Install Docker Compose
        run: |
          sudo apt-get update
          sudo apt-get install -y docker-compose
          if ! docker compose version; then
            echo "❌ Docker Compose не установлен!" >&2
            exit 1
          fi
      - name: Build Docker images
        run: |
          docker compose build
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Generate .env file
        run: |
          cp .env.example .env
          echo "TOKEN=${{ secrets.BOT_TELEGRAM_TOKEN }}" >> .env
          echo "OWNER_ID=${{ secrets.BOT_OWNER_ID }}" >> .env

      - name: Prepare files for transfer
        run: |
          mkdir -p temp_deploy
          cp -r src temp_deploy/
          cp docker-compose.yml temp_deploy/
          cp .env temp_deploy/
          echo "Files in temp_deploy:"
          ls -laR temp_deploy/

      - name: Verify files exist
        run: |
          if [ -z "$(ls -A temp_deploy)" ]; then
            echo "❌ No files found in temp_deploy!"
            exit 1
          else
            echo "✅ Files found in temp_deploy"
          fi

      - name: Copy project to remote server
        uses: appleboy/scp-action@v0.1.4
        with:
          host: ${{ secrets.REMOTE_HOST }}
          username: ${{ secrets.REMOTE_USER }}
          key: ${{ secrets.REMOTE_KEY }}
          source: "temp_deploy"
          target: /home/admin/covid-bot
          strip_components: 1
          rm: false
          debug: true

      - name: Deploy on remote server
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.REMOTE_HOST }}
          username: ${{ secrets.REMOTE_USER }}
          key: ${{ secrets.REMOTE_KEY }}
          script: |
            cd /home/admin/covid-bot
            docker compose up -d --build
